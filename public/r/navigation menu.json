{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navigation menu",
  "type": "registry:ui",
  "title": "NavigationMenu",
  "author": "Preet Suthar <hi@preetsuthar.me>",
  "description": "A navigation menu component.",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "registry/navigation-menu/navigation-menu.tsx",
      "content": "'use client';\n\nimport { NavigationMenu as BaseNav } from '@base-ui-components/react/navigation-menu';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst NavigationMenu = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Root>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Root>\n>(function NavigationMenuComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.Root\n      className={cn(\n        'min-w-max rounded bg-secondary p-1 text-foreground',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenu.displayName = 'NavigationMenu';\n\nconst NavigationMenuList = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.List>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.List>\n>(function NavigationMenuListComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.List\n      className={cn('relative flex', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenuList.displayName = 'NavigationMenuList';\n\nconst NavigationMenuItem = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Item>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Item>\n>(function NavigationMenuItemComponent({ className, ...props }, ref) {\n  return <BaseNav.Item className={cn('', className)} ref={ref} {...props} />;\n});\nNavigationMenuItem.displayName = 'NavigationMenuItem';\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Trigger>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Trigger>\n>(function NavigationMenuTriggerComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.Trigger\n      className={cn(\n        'inline-flex h-10 select-none items-center justify-center gap-1.5 rounded bg-secondary px-3 font-medium text-secondary-foreground text-sm no-underline ring-offset-background hover:bg-secondary/80 hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 data-[popup-open]:bg-accent',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenuTrigger.displayName = 'NavigationMenuTrigger';\n\nconst NavigationMenuIcon = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Icon>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Icon>\n>(function NavigationMenuIconComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.Icon\n      className={cn(\n        'transition-transform duration-200 ease-in-out data-[popup-open]:rotate-180',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenuIcon.displayName = 'NavigationMenuIcon';\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Content>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Content>\n>(function NavigationMenuContentComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.Content\n      className={cn(\n        'data-[starting-style]:data-[activation-direction=left]:-translate-x-1/2 data-[ending-style]:data-[activation-direction=right]:-translate-x-1/2 box-border h-full w-[calc(100vw-2.5rem)] p-6 transition-[opacity,transform,translate] duration-[var(--duration)] ease-[var(--easing)] [--duration:0.35s] [--easing:cubic-bezier(0.22,1,0.36,1)] data-[ending-style]:data-[activation-direction=left]:translate-x-1/2 data-[starting-style]:data-[activation-direction=right]:translate-x-1/2 data-[ending-style]:opacity-0 sm:w-max sm:min-w-[24rem]',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenuContent.displayName = 'NavigationMenuContent';\n\nconst NavigationMenuLink = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Link>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Link>\n>(function NavigationMenuLinkComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.Link\n      className={cn('no-underline', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenuLink.displayName = 'NavigationMenuLink';\n\nconst NavigationMenuPortal = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Portal>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Portal>\n>(function NavigationMenuPortalComponent(props, _ref) {\n  return <BaseNav.Portal {...props} />;\n});\nNavigationMenuPortal.displayName = 'NavigationMenuPortal';\n\nconst NavigationMenuPositioner = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Positioner>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Positioner>\n>(function NavigationMenuPositionerComponent(\n  { className, style, ...props },\n  ref\n) {\n  const mergedStyle: React.CSSProperties = {\n    ...(style as React.CSSProperties),\n    ['--duration' as string]: '0.35s',\n    ['--easing' as string]: 'cubic-bezier(0.22, 1, 0.36, 1)',\n  };\n  return (\n    <BaseNav.Positioner\n      className={cn(\n        'z-50 box-border h-[var(--positioner-height)] w-[var(--positioner-width)] max-w-[var(--available-width)] transition-[top,left,right,bottom] before:absolute before:content-[\"\"\"] data-[instant]:transition-none data-[side=bottom]:before:top-[-10px] data-[side=left]:before:top-0 data-[side=right]:before:top-0 data-[side=bottom]:before:right-0 data-[side=left]:before:right-[-10px] data-[side=top]:before:right-0 data-[side=left]:before:bottom-0 data-[side=right]:before:bottom-0 data-[side=top]:before:bottom-[-10px] data-[side=bottom]:before:left-0 data-[side=right]:before:left-[-10px] data-[side=top]:before:left-0 data-[side=bottom]:before:h-2.5 data-[side=top]:before:h-2.5 data-[side=left]:before:w-2.5 data-[side=right]:before:w-2.5',\n        className\n      )}\n      ref={ref}\n      style={mergedStyle}\n      {...props}\n    />\n  );\n});\nNavigationMenuPositioner.displayName = 'NavigationMenuPositioner';\n\nconst NavigationMenuPopup = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Popup>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Popup>\n>(function NavigationMenuPopupComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.Popup\n      className={cn(\n        'relative z-50 h-[var(--popup-height)] w-[var(--popup-width)] origin-[var(--transform-origin)] rounded border border-border bg-popover text-popover-foreground transition-[opacity,transform,width,height,scale,translate] duration-[var(--duration)] ease-[var(--easing)] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenuPopup.displayName = 'NavigationMenuPopup';\n\nconst NavigationMenuArrow = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Arrow>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Arrow>\n>(function NavigationMenuArrowComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.Arrow\n      className={cn(\n        'data-[side=right]:-rotate-90 flex transition-[left] duration-[var(--duration)] ease-[var(--easing)] data-[side=bottom]:top-[-8px] data-[side=left]:right-[-13px] data-[side=top]:bottom-[-8px] data-[side=right]:left-[-13px] data-[side=left]:rotate-90 data-[side=top]:rotate-180',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenuArrow.displayName = 'NavigationMenuArrow';\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ComponentRef<typeof BaseNav.Viewport>,\n  React.ComponentPropsWithoutRef<typeof BaseNav.Viewport>\n>(function NavigationMenuViewportComponent({ className, ...props }, ref) {\n  return (\n    <BaseNav.Viewport\n      className={cn('relative h-full w-full overflow-hidden', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nNavigationMenuViewport.displayName = 'NavigationMenuViewport';\n\nfunction navigationMenuTriggerStyle() {\n  return 'inline-flex h-10 items-center justify-center gap-1.5 rounded bg-secondary px-3 text-sm font-medium text-secondary-foreground hover:bg-secondary/80 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 ring-offset-background data-[popup-open]:bg-accent';\n}\n\nexport {\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuIcon,\n  NavigationMenuContent,\n  NavigationMenuLink,\n  NavigationMenuPortal,\n  NavigationMenuPositioner,\n  NavigationMenuPopup,\n  NavigationMenuArrow,\n  NavigationMenuViewport,\n  navigationMenuTriggerStyle,\n};\n",
      "type": "registry:ui"
    }
  ]
}