{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "popover",
  "type": "registry:ui",
  "title": "Popover",
  "author": "Preet Suthar <hi@preetsuthar.me>",
  "description": "A popover component for displaying content on top of another.",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "registry/popover/popover.tsx",
      "content": "'use client';\n\nimport { Popover as BasePopover } from '@base-ui-components/react/popover';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst Popover = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Root>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Root>\n>(function PopoverComponent(props, _ref) {\n  return <BasePopover.Root {...props} />;\n});\nPopover.displayName = 'Popover';\n\nconst PopoverTrigger = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Trigger>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Trigger>\n>(function PopoverTriggerComponent({ className, ...props }, ref) {\n  return (\n    <BasePopover.Trigger\n      className={cn(\n        'inline-flex items-center justify-center rounded font-medium text-sm ring-offset-background transition-colors hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 data-[popup-open]:bg-accent data-[disabled]:opacity-50',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nPopoverTrigger.displayName = 'PopoverTrigger';\n\nconst PopoverPortal = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Portal>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Portal>\n>(function PopoverPortalComponent(props, _ref) {\n  return <BasePopover.Portal {...props} />;\n});\nPopoverPortal.displayName = 'PopoverPortal';\n\nconst PopoverPositioner = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Positioner>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Positioner>\n>(function PopoverPositionerComponent({ className, ...props }, ref) {\n  return (\n    <BasePopover.Positioner\n      className={cn('z-50 outline-none', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nPopoverPositioner.displayName = 'PopoverPositioner';\n\nconst PopoverPopup = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Popup>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Popup>\n>(function PopoverPopupComponent({ className, ...props }, ref) {\n  return (\n    <BasePopover.Popup\n      className={cn(\n        'z-50 origin-[var(--transform-origin)] rounded border border-border bg-popover px-6 py-4 text-popover-foreground transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nPopoverPopup.displayName = 'PopoverPopup';\n\nconst PopoverArrow = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Arrow>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Arrow>\n>(function PopoverArrowComponent({ className, ...props }, ref) {\n  return (\n    <BasePopover.Arrow\n      className={cn(\n        'data-[side=right]:-rotate-90 data-[side=bottom]:top-[-8px] data-[side=left]:right-[-13px] data-[side=top]:bottom-[-8px] data-[side=right]:left-[-13px] data-[side=left]:rotate-90 data-[side=top]:rotate-180',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nPopoverArrow.displayName = 'PopoverArrow';\n\nconst PopoverTitle = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Title>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Title>\n>(function PopoverTitleComponent({ className, ...props }, ref) {\n  return (\n    <BasePopover.Title\n      className={cn('font-medium text-base', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nPopoverTitle.displayName = 'PopoverTitle';\n\nconst PopoverDescription = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Description>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Description>\n>(function PopoverDescriptionComponent({ className, ...props }, ref) {\n  return (\n    <BasePopover.Description\n      className={cn('text-base text-muted-foreground', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nPopoverDescription.displayName = 'PopoverDescription';\n\nconst PopoverClose = React.forwardRef<\n  React.ComponentRef<typeof BasePopover.Close>,\n  React.ComponentPropsWithoutRef<typeof BasePopover.Close>\n>(function PopoverCloseComponent({ className, ...props }, ref) {\n  return (\n    <BasePopover.Close\n      className={cn(\n        'inline-flex items-center justify-center whitespace-nowrap rounded font-medium text-sm ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nPopoverClose.displayName = 'PopoverClose';\n\n// Alias to match shadcn-style import\nconst PopoverContent = PopoverPopup;\n\nexport {\n  Popover,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverPositioner,\n  PopoverPopup,\n  PopoverContent,\n  PopoverArrow,\n  PopoverTitle,\n  PopoverDescription,\n  PopoverClose,\n};\n",
      "type": "registry:ui"
    }
  ]
}