{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "menu",
  "type": "registry:ui",
  "title": "Menu",
  "author": "Preet Suthar <hi@preetsuthar.me>",
  "description": "A menu component.",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "registry/menu/menu.tsx",
      "content": "'use client';\n\nimport { Menu as BaseMenu } from '@base-ui-components/react/menu';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst Menu = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Root>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Root>\n>(function MenuComponent(props, _ref) {\n  return <BaseMenu.Root {...props} />;\n});\nMenu.displayName = 'Menu';\n\nconst MenuTrigger = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Trigger>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Trigger>\n>(function MenuTriggerComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.Trigger\n      className={cn(\n        'inline-flex items-center justify-center gap-1 whitespace-nowrap rounded font-medium text-sm ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 data-[popup-open]:bg-accent data-[popup-open]:text-accent-foreground data-[disabled]:opacity-50',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuTrigger.displayName = 'MenuTrigger';\n\nconst MenuPortal = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Portal>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Portal>\n>(function MenuPortalComponent(props, _ref) {\n  return <BaseMenu.Portal {...props} />;\n});\nMenuPortal.displayName = 'MenuPortal';\n\nconst MenuPositioner = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Positioner>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Positioner>\n>(function MenuPositionerComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.Positioner\n      className={cn('z-50 outline-none', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuPositioner.displayName = 'MenuPositioner';\n\nconst MenuContent = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Popup>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Popup>\n>(function MenuContentComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.Popup\n      className={cn(\n        'z-50 min-w-[10rem] origin-[var(--transform-origin)] rounded border border-border bg-popover p-1 text-popover-foreground transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuContent.displayName = 'MenuContent';\n\nconst MenuArrow = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Arrow>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Arrow>\n>(function MenuArrowComponent({ className, children, ...props }, ref) {\n  return (\n    <BaseMenu.Arrow className={cn('', className)} ref={ref} {...props}>\n      {children ?? <ArrowSvg />}\n    </BaseMenu.Arrow>\n  );\n});\nMenuArrow.displayName = 'MenuArrow';\n\nconst MenuItem = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Item>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Item>\n>(function MenuItemComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.Item\n      className={cn(\n        'relative flex cursor-default select-none items-center rounded p-1.5 pr-2 pl-4 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuItem.displayName = 'MenuItem';\n\nconst MenuSeparator = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Separator>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Separator>\n>(function MenuSeparatorComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.Separator\n      className={cn('mx-4 my-1.5 h-px bg-muted', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuSeparator.displayName = 'MenuSeparator';\n\nconst MenuGroup = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Group>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Group>\n>(function MenuGroupComponent({ className, ...props }, ref) {\n  return <BaseMenu.Group className={cn('', className)} ref={ref} {...props} />;\n});\nMenuGroup.displayName = 'MenuGroup';\n\nconst MenuGroupLabel = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.GroupLabel>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.GroupLabel>\n>(function MenuGroupLabelComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.GroupLabel\n      className={cn(\n        'cursor-default select-none p-2 pr-8 pl-7 text-muted-foreground text-sm',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuGroupLabel.displayName = 'MenuGroupLabel';\n\nconst MenuCheckboxItem = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.CheckboxItem>\n>(function MenuCheckboxItemComponent({ className, children, ...props }, ref) {\n  return (\n    <BaseMenu.CheckboxItem\n      className={cn(\n        'relative grid cursor-default grid-cols-[0.75rem_1fr] items-center gap-2 rounded p-1.5 pr-8 pl-2.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50',\n        className\n      )}\n      ref={ref}\n      {...props}\n    >\n      {children}\n    </BaseMenu.CheckboxItem>\n  );\n});\nMenuCheckboxItem.displayName = 'MenuCheckboxItem';\n\nconst MenuCheckboxItemIndicator = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.CheckboxItemIndicator>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.CheckboxItemIndicator>\n>(function MenuCheckboxItemIndicatorComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.CheckboxItemIndicator\n      className={cn('col-start-1 flex items-center justify-center', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuCheckboxItemIndicator.displayName = 'MenuCheckboxItemIndicator';\n\nconst MenuRadioGroup = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.RadioGroup>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.RadioGroup>\n>(function MenuRadioGroupComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.RadioGroup className={cn('', className)} ref={ref} {...props} />\n  );\n});\nMenuRadioGroup.displayName = 'MenuRadioGroup';\n\nconst MenuRadioItem = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.RadioItem>\n>(function MenuRadioItemComponent({ className, children, ...props }, ref) {\n  return (\n    <BaseMenu.RadioItem\n      className={cn(\n        'relative grid cursor-default grid-cols-[0.75rem_1fr] items-center gap-2 rounded p-1.5 pr-8 pl-2.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50',\n        className\n      )}\n      ref={ref}\n      {...props}\n    >\n      {children}\n    </BaseMenu.RadioItem>\n  );\n});\nMenuRadioItem.displayName = 'MenuRadioItem';\n\nconst MenuRadioItemIndicator = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.RadioItemIndicator>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.RadioItemIndicator>\n>(function MenuRadioItemIndicatorComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.RadioItemIndicator\n      className={cn('col-start-1 flex items-center justify-center', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuRadioItemIndicator.displayName = 'MenuRadioItemIndicator';\n\nconst MenuSub = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.SubmenuRoot>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.SubmenuRoot>\n>(function MenuSubComponent(props, _ref) {\n  return <BaseMenu.SubmenuRoot {...props} />;\n});\nMenuSub.displayName = 'MenuSub';\n\nconst MenuSubTrigger = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.SubmenuTrigger>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.SubmenuTrigger>\n>(function MenuSubTriggerComponent({ className, children, ...props }, ref) {\n  return (\n    <BaseMenu.SubmenuTrigger\n      className={cn(\n        'relative flex w-full cursor-default select-none items-center justify-between gap-4 rounded p-1.5 pr-4 pl-4 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[highlighted]:bg-accent data-[popup-open]:bg-accent data-[highlighted]:text-accent-foreground data-[popup-open]:text-accent-foreground',\n        className\n      )}\n      ref={ref}\n      {...props}\n    >\n      {children}\n      <ChevronRightIcon className=\"ml-auto h-3 w-3\" />\n    </BaseMenu.SubmenuTrigger>\n  );\n});\nMenuSubTrigger.displayName = 'MenuSubTrigger';\n\nconst MenuSubContent = React.forwardRef<\n  React.ComponentRef<typeof BaseMenu.Popup>,\n  React.ComponentPropsWithoutRef<typeof BaseMenu.Popup>\n>(function MenuSubContentComponent({ className, ...props }, ref) {\n  return (\n    <BaseMenu.Popup\n      className={cn(\n        'z-50 min-w-[10rem] origin-[var(--transform-origin)] rounded border border-border bg-popover p-1 text-popover-foreground transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nMenuSubContent.displayName = 'MenuSubContent';\n\nfunction ChevronRightIcon(props: React.ComponentProps<'svg'>) {\n  return (\n    <svg fill=\"none\" height=\"10\" viewBox=\"0 0 10 10\" width=\"10\" {...props}>\n      <title>Open submenu</title>\n      <path d=\"M3.5 9L7.5 5L3.5 1\" stroke=\"currentcolor\" strokeWidth=\"1.5\" />\n    </svg>\n  );\n}\n\nfunction ArrowSvg(props: React.ComponentProps<'svg'>) {\n  return (\n    <svg fill=\"none\" height=\"10\" viewBox=\"0 0 20 10\" width=\"20\" {...props}>\n      <title>Menu arrow</title>\n      <path\n        className=\"fill-[canvas]\"\n        d=\"M9.66437 2.60207L4.80758 6.97318C4.07308 7.63423 3.11989 8 2.13172 8H0V10H20V8H18.5349C17.5468 8 16.5936 7.63423 15.8591 6.97318L11.0023 2.60207C10.622 2.2598 10.0447 2.25979 9.66437 2.60207Z\"\n      />\n      <path\n        className=\"fill-border/70 dark:fill-transparent\"\n        d=\"M8.99542 1.85876C9.75604 1.17425 10.9106 1.17422 11.6713 1.85878L16.5281 6.22989C17.0789 6.72568 17.7938 7.00001 18.5349 7.00001L15.89 7L11.0023 2.60207C10.622 2.2598 10.0447 2.2598 9.66436 2.60207L4.77734 7L2.13171 7.00001C2.87284 7.00001 3.58774 6.72568 4.13861 6.22989L8.99542 1.85876Z\"\n      />\n      <path\n        className=\"dark:fill-border\"\n        d=\"M10.3333 3.34539L5.47654 7.71648C4.55842 8.54279 3.36693 9 2.13172 9H0V8H2.13172C3.11989 8 4.07308 7.63423 4.80758 6.97318L9.66437 2.60207C10.0447 2.25979 10.622 2.2598 11.0023 2.60207L15.8591 6.97318C16.5936 7.63423 17.5468 8 18.5349 8H20V9H18.5349C17.2998 9 16.1083 8.54278 15.1901 7.71648L10.3333 3.34539Z\"\n      />\n    </svg>\n  );\n}\n\nexport {\n  Menu,\n  MenuTrigger,\n  MenuPortal,\n  MenuPositioner,\n  MenuContent,\n  MenuArrow,\n  MenuItem,\n  MenuSeparator,\n  MenuGroup,\n  MenuGroupLabel,\n  MenuCheckboxItem,\n  MenuCheckboxItemIndicator,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuRadioItemIndicator,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n};\n",
      "type": "registry:ui"
    }
  ]
}