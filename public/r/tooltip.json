{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tooltip",
  "type": "registry:ui",
  "title": "Tooltip",
  "author": "Preet Suthar <hi@preetsuthar.me>",
  "description": "Hover tooltips.",
  "dependencies": ["@base-ui-components/react"],
  "files": [
    {
      "path": "registry/tooltip/tooltip.tsx",
      "content": "'use client';\n\nimport { Tooltip as BaseTooltip } from '@base-ui-components/react/tooltip';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst TooltipProvider = React.forwardRef<\n  React.ComponentRef<typeof BaseTooltip.Provider>,\n  React.ComponentPropsWithoutRef<typeof BaseTooltip.Provider>\n>(function TooltipProviderComponent(props, _ref) {\n  return <BaseTooltip.Provider {...props} />;\n});\nTooltipProvider.displayName = 'TooltipProvider';\n\nconst Tooltip = React.forwardRef<\n  React.ComponentRef<typeof BaseTooltip.Root>,\n  React.ComponentPropsWithoutRef<typeof BaseTooltip.Root>\n>(function TooltipComponent(props, _ref) {\n  return <BaseTooltip.Root {...props} />;\n});\nTooltip.displayName = 'Tooltip';\n\nconst TooltipTrigger = React.forwardRef<\n  React.ComponentRef<typeof BaseTooltip.Trigger>,\n  React.ComponentPropsWithoutRef<typeof BaseTooltip.Trigger>\n>(function TooltipTriggerComponent({ className, ...props }, ref) {\n  return (\n    <BaseTooltip.Trigger\n      className={cn(\n        'flex size-8 select-none items-center justify-center rounded text-foreground hover:bg-accent hover:text-accent-foreground focus-visible:bg-transparent focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring active:bg-accent data-[popup-open]:bg-accent focus-visible:[&:not(:hover)]:bg-transparent',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTooltipTrigger.displayName = 'TooltipTrigger';\n\nconst TooltipPortal = React.forwardRef<\n  React.ComponentRef<typeof BaseTooltip.Portal>,\n  React.ComponentPropsWithoutRef<typeof BaseTooltip.Portal>\n>(function TooltipPortalComponent(props, _ref) {\n  return <BaseTooltip.Portal {...props} />;\n});\nTooltipPortal.displayName = 'TooltipPortal';\n\nconst TooltipPositioner = React.forwardRef<\n  React.ComponentRef<typeof BaseTooltip.Positioner>,\n  React.ComponentPropsWithoutRef<typeof BaseTooltip.Positioner>\n>(function TooltipPositionerComponent({ className, ...props }, ref) {\n  return (\n    <BaseTooltip.Positioner\n      className={cn('', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTooltipPositioner.displayName = 'TooltipPositioner';\n\nconst TooltipPopup = React.forwardRef<\n  React.ComponentRef<typeof BaseTooltip.Popup>,\n  React.ComponentPropsWithoutRef<typeof BaseTooltip.Popup>\n>(function TooltipPopupComponent({ className, ...props }, ref) {\n  return (\n    <BaseTooltip.Popup\n      className={cn(\n        'flex origin-[var(--transform-origin)] flex-col rounded bg-popover px-2 py-1 text-popover-foreground text-sm outline outline-border transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0 data-[instant]:duration-0',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTooltipPopup.displayName = 'TooltipPopup';\n\nconst TooltipContent = TooltipPopup;\n\nconst TooltipArrow = React.forwardRef<\n  React.ComponentRef<typeof BaseTooltip.Arrow>,\n  React.ComponentPropsWithoutRef<typeof BaseTooltip.Arrow>\n>(function TooltipArrowComponent({ className, ...props }, ref) {\n  return (\n    <BaseTooltip.Arrow\n      className={cn(\n        'data-[side=right]:-rotate-90 data-[side=bottom]:top-[-8px] data-[side=left]:right-[-13px] data-[side=top]:bottom-[-8px] data-[side=right]:left-[-13px] data-[side=left]:rotate-90 data-[side=top]:rotate-180',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTooltipArrow.displayName = 'TooltipArrow';\n\nexport {\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipPortal,\n  TooltipPositioner,\n  TooltipPopup,\n  TooltipContent,\n  TooltipArrow,\n};\n",
      "type": "registry:ui"
    }
  ]
}
