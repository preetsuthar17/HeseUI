{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast",
  "type": "registry:ui",
  "title": "Toast",
  "author": "Preet Suthar <hi@preetsuthar.me>",
  "description": "A toast notification component.",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "registry/toast/toast.tsx",
      "content": "'use client';\n\nimport { Toast as BaseToast } from '@base-ui-components/react/toast';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst ToastProvider = React.forwardRef<\n  React.ComponentRef<typeof BaseToast.Provider>,\n  React.ComponentPropsWithoutRef<typeof BaseToast.Provider>\n>(function ToastProviderComponent(props, _ref) {\n  return <BaseToast.Provider {...props} />;\n});\nToastProvider.displayName = 'ToastProvider';\n\nconst ToastPortal = React.forwardRef<\n  React.ComponentRef<typeof BaseToast.Portal>,\n  React.ComponentPropsWithoutRef<typeof BaseToast.Portal>\n>(function ToastPortalComponent(props, _ref) {\n  return <BaseToast.Portal {...props} />;\n});\nToastPortal.displayName = 'ToastPortal';\n\nconst ToastViewport = React.forwardRef<\n  React.ComponentRef<typeof BaseToast.Viewport>,\n  React.ComponentPropsWithoutRef<typeof BaseToast.Viewport>\n>(function ToastViewportComponent({ className, ...props }, ref) {\n  return (\n    <BaseToast.Viewport\n      className={cn(\n        'fixed right-4 bottom-4 z-50 mx-auto flex w-[250px] sm:right-8 sm:bottom-8 sm:w-[300px]',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nToastViewport.displayName = 'ToastViewport';\n\nconst ToastRoot = React.forwardRef<\n  React.ComponentRef<typeof BaseToast.Root>,\n  React.ComponentPropsWithoutRef<typeof BaseToast.Root>\n>(function ToastRootComponent({ className, style, ...props }, ref) {\n  const mergedStyle: React.CSSProperties = {\n    ...(style as React.CSSProperties),\n    ['--gap' as string]: '0.75rem',\n    ['--offset-y' as string]: 'var(--toast-offset-y)',\n  };\n  return (\n    <BaseToast.Root\n      className={cn(\n        'absolute right-0 bottom-0 left-auto z-[calc(1000-var(--toast-index))] mr-0 w-full select-none rounded border border-border bg-background p-4 text-foreground transition-[opacity,transform] duration-500 ease-[cubic-bezier(0.22,1,0.36,1)] [transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-swipe-movement-y)+calc(min(var(--toast-index),10)*-15px)))_scale(calc(max(0,1-(var(--toast-index)*0.1))))] after:absolute after:bottom-full after:left-0 after:h-[calc(var(--gap)+1px)] after:w-full after:content-[\"\"\"] data-[ending-style]:opacity-0 data-[limited]:opacity-0 data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))] data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))] data-[expanded]:[transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--offset-y)*-1+calc(var(--toast-index)*var(--gap)*-1)+var(--toast-swipe-movement-y)))] data-[expanded]:data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[expanded]:data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))] data-[starting-style]:[transform:translateY(150%)] data-[ending-style]:[&:not([data-limited])]:[transform:translateY(150%)]',\n        className\n      )}\n      ref={ref}\n      style={mergedStyle}\n      {...props}\n    />\n  );\n});\nToastRoot.displayName = 'ToastRoot';\n\nconst ToastTitle = React.forwardRef<\n  React.ComponentRef<typeof BaseToast.Title>,\n  React.ComponentPropsWithoutRef<typeof BaseToast.Title>\n>(function ToastTitleComponent({ className, ...props }, ref) {\n  return (\n    <BaseToast.Title\n      className={cn('font-medium text-[0.975rem] leading-5', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nToastTitle.displayName = 'ToastTitle';\n\nconst ToastDescription = React.forwardRef<\n  React.ComponentRef<typeof BaseToast.Description>,\n  React.ComponentPropsWithoutRef<typeof BaseToast.Description>\n>(function ToastDescriptionComponent({ className, ...props }, ref) {\n  return (\n    <BaseToast.Description\n      className={cn(\n        'text-[0.925rem] text-muted-foreground leading-5',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nToastDescription.displayName = 'ToastDescription';\n\nconst ToastAction = React.forwardRef<\n  React.ComponentRef<typeof BaseToast.Action>,\n  React.ComponentPropsWithoutRef<typeof BaseToast.Action>\n>(function ToastActionComponent({ className, ...props }, ref) {\n  return (\n    <BaseToast.Action\n      className={cn(\n        'mt-2 mr-auto inline-flex h-8 w-fit items-center justify-center rounded bg-primary px-3 font-medium text-primary-foreground text-sm hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nToastAction.displayName = 'ToastAction';\n\nconst ToastClose = React.forwardRef<\n  React.ComponentRef<typeof BaseToast.Close>,\n  React.ComponentPropsWithoutRef<typeof BaseToast.Close>\n>(function ToastCloseComponent({ className, ...props }, ref) {\n  return (\n    <BaseToast.Close\n      className={cn(\n        'absolute top-2 right-2 flex h-5 w-5 items-center justify-center rounded bg-transparent text-muted-foreground hover:bg-accent hover:text-foreground',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nToastClose.displayName = 'ToastClose';\n\nconst useToastManager = BaseToast.useToastManager;\nconst createToastManager = BaseToast.createToastManager;\n\nconst defaultToastManager = createToastManager();\n\ntype SimpleToastOptions = {\n  description?: string;\n  action?: { label: string; onClick: () => void };\n  timeout?: number;\n  type?: string;\n};\n\nfunction ToastList() {\n  const { toasts } = useToastManager();\n  return toasts.map((t) => (\n    <ToastRoot key={t.id} toast={t}>\n      <ToastTitle />\n      <ToastDescription />\n      {t.actionProps ? <ToastAction /> : null}\n      <ToastClose aria-label=\"Close\" />\n    </ToastRoot>\n  ));\n}\n\nfunction ToastToasterComponent() {\n  return (\n    <ToastProvider toastManager={defaultToastManager}>\n      <ToastPortal>\n        <ToastViewport>\n          <ToastList />\n        </ToastViewport>\n      </ToastPortal>\n    </ToastProvider>\n  );\n}\n\nfunction toast(title: string, options?: SimpleToastOptions) {\n  defaultToastManager.add({\n    title,\n    description: options?.description,\n    timeout: options?.timeout,\n    actionProps: options?.action\n      ? { children: options.action.label, onClick: options.action.onClick }\n      : undefined,\n    type: options?.type,\n  });\n}\n\nexport {\n  ToastProvider,\n  ToastPortal,\n  ToastViewport,\n  ToastRoot,\n  ToastTitle,\n  ToastDescription,\n  ToastAction,\n  ToastClose,\n  useToastManager,\n  createToastManager,\n  ToastToasterComponent as ToastToaster,\n  toast,\n};\n",
      "type": "registry:ui"
    }
  ]
}