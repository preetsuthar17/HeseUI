{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog",
  "type": "registry:ui",
  "title": "Dialog",
  "author": "Preet Suthar <hi@preetsuthar.me>",
  "description": "Modal dialogs.",
  "dependencies": ["@base-ui-components/react"],
  "files": [
    {
      "path": "registry/dialog/dialog.tsx",
      "content": "'use client';\n\nimport { Dialog as BaseDialog } from '@base-ui-components/react/dialog';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst Dialog = React.forwardRef<\n  React.ComponentRef<typeof BaseDialog.Root>,\n  React.ComponentPropsWithoutRef<typeof BaseDialog.Root>\n>(({ ...props }, _ref) => <BaseDialog.Root {...props} />);\nDialog.displayName = 'Dialog';\n\nconst DialogTrigger = React.forwardRef<\n  React.ComponentRef<typeof BaseDialog.Trigger>,\n  React.ComponentPropsWithoutRef<typeof BaseDialog.Trigger>\n>(({ className, ...props }, ref) => (\n  <BaseDialog.Trigger\n    className={cn(\n      'inline-flex items-center justify-center whitespace-nowrap rounded font-medium text-sm ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n      className\n    )}\n    ref={ref}\n    {...props}\n  />\n));\nDialogTrigger.displayName = 'DialogTrigger';\n\nconst DialogPortal = React.forwardRef<\n  React.ComponentRef<typeof BaseDialog.Portal>,\n  React.ComponentPropsWithoutRef<typeof BaseDialog.Portal>\n>(({ ...props }, _ref) => <BaseDialog.Portal {...props} />);\nDialogPortal.displayName = 'DialogPortal';\n\nconst DialogOverlay = React.forwardRef<\n  React.ComponentRef<typeof BaseDialog.Backdrop>,\n  React.ComponentPropsWithoutRef<typeof BaseDialog.Backdrop>\n>(({ className, ...props }, ref) => (\n  <BaseDialog.Backdrop\n    className={cn(\n      'fixed inset-0 bg-black opacity-20 transition-all duration-150 data-[ending-style]:opacity-0 data-[starting-style]:opacity-0 dark:opacity-70',\n      className\n    )}\n    ref={ref}\n    {...props}\n  />\n));\nDialogOverlay.displayName = 'DialogOverlay';\n\nconst DialogContent = React.forwardRef<\n  React.ComponentRef<typeof BaseDialog.Popup>,\n  React.ComponentPropsWithoutRef<typeof BaseDialog.Popup>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <BaseDialog.Popup\n      className={cn(\n        '-mt-8 -translate-x-1/2 -translate-y-1/2 fixed top-[calc(50%+1.25rem*var(--nested-dialogs))] left-1/2 w-96 max-w-[calc(100vw-3rem)] scale-[calc(1-0.1*var(--nested-dialogs))] rounded bg-background p-6 text-foreground outline outline-border transition-all duration-150 data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0 data-[nested-dialog-open]:after:absolute data-[nested-dialog-open]:after:inset-0 data-[nested-dialog-open]:after:rounded-[inherit] data-[nested-dialog-open]:after:bg-black/5',\n        className\n      )}\n      ref={ref}\n      {...props}\n    >\n      {children}\n    </BaseDialog.Popup>\n  </DialogPortal>\n));\nDialogContent.displayName = 'DialogContent';\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn('flex flex-col gap-1.5 text-center sm:text-left', className)}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:gap-2',\n      className\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ComponentRef<typeof BaseDialog.Title>,\n  React.ComponentPropsWithoutRef<typeof BaseDialog.Title>\n>(({ className, ...props }, ref) => (\n  <BaseDialog.Title\n    className={cn('-mt-1.5 mb-1 font-medium text-lg', className)}\n    ref={ref}\n    {...props}\n  />\n));\nDialogTitle.displayName = 'DialogTitle';\n\nconst DialogDescription = React.forwardRef<\n  React.ComponentRef<typeof BaseDialog.Description>,\n  React.ComponentPropsWithoutRef<typeof BaseDialog.Description>\n>(({ className, ...props }, ref) => (\n  <BaseDialog.Description\n    className={cn('mb-6 text-base text-muted-foreground', className)}\n    ref={ref}\n    {...props}\n  />\n));\nDialogDescription.displayName = 'DialogDescription';\n\nconst DialogClose = React.forwardRef<\n  React.ComponentRef<typeof BaseDialog.Close>,\n  React.ComponentPropsWithoutRef<typeof BaseDialog.Close>\n>(({ className, ...props }, ref) => (\n  <BaseDialog.Close\n    className={cn(\n      'inline-flex h-10 items-center justify-center whitespace-nowrap rounded bg-secondary px-4 py-2 font-medium text-secondary-foreground text-sm ring-offset-background transition-colors hover:bg-secondary/80 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n      className\n    )}\n    ref={ref}\n    {...props}\n  />\n));\nDialogClose.displayName = 'DialogClose';\n\nexport {\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n};\n",
      "type": "registry:ui"
    }
  ]
}
