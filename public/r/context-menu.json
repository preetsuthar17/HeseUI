{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "context-menu",
  "type": "registry:ui",
  "title": "Context Menu",
  "author": "Preet Suthar <hi@preetsuthar.me>",
  "description": "A contextual menu triggered by right-click.",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "files": [
    {
      "path": "registry/context-menu/context-menu.tsx",
      "content": "'use client';\n\nimport { ContextMenu as BaseContextMenu } from '@base-ui-components/react/context-menu';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst ContextMenu = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Root>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Root>\n>(({ ...props }, _ref) => <BaseContextMenu.Root {...props} />);\nContextMenu.displayName = 'ContextMenu';\n\nconst ContextMenuTrigger = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Trigger>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Trigger>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.Trigger className={cn('', className)} ref={ref} {...props} />\n));\nContextMenuTrigger.displayName = 'ContextMenuTrigger';\n\nconst ContextMenuPortal = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Portal>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Portal>\n>(({ ...props }, _ref) => <BaseContextMenu.Portal {...props} />);\nContextMenuPortal.displayName = 'ContextMenuPortal';\n\nconst ContextMenuPositioner = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Positioner>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Positioner>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.Positioner\n    className={cn('z-50', className)}\n    ref={ref}\n    {...props}\n  />\n));\nContextMenuPositioner.displayName = 'ContextMenuPositioner';\n\nconst ContextMenuContent = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Popup>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Popup>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.Popup\n    className={cn(\n      'z-50 min-w-[8rem] origin-top-left overflow-hidden rounded border border-border bg-popover p-1 text-popover-foreground transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0 data-[starting-style]:opacity-0',\n      className\n    )}\n    ref={ref}\n    {...props}\n  />\n));\nContextMenuContent.displayName = 'ContextMenuContent';\n\nconst ContextMenuItem = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Item>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Item>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.Item\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50',\n      className\n    )}\n    ref={ref}\n    {...props}\n  />\n));\nContextMenuItem.displayName = 'ContextMenuItem';\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Separator>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Separator>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.Separator\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    ref={ref}\n    {...props}\n  />\n));\nContextMenuSeparator.displayName = 'ContextMenuSeparator';\n\nconst ContextMenuSub = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.SubmenuRoot>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.SubmenuRoot>\n>(({ ...props }, _ref) => <BaseContextMenu.SubmenuRoot {...props} />);\nContextMenuSub.displayName = 'ContextMenuSub';\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.SubmenuTrigger>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.SubmenuTrigger>\n>(({ className, children, ...props }, ref) => (\n  <BaseContextMenu.SubmenuTrigger\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center justify-between gap-1 rounded px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[highlighted]:bg-accent data-[popup-open]:bg-accent data-[highlighted]:text-accent-foreground data-[popup-open]:text-accent-foreground',\n      className\n    )}\n    ref={ref}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4 shrink-0\" />\n  </BaseContextMenu.SubmenuTrigger>\n));\nContextMenuSubTrigger.displayName = 'ContextMenuSubTrigger';\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Popup>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Popup>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.Popup\n    className={cn(\n      'z-50 min-w-[8rem] origin-[var(--transform-origin)] overflow-hidden rounded border border-border bg-popover p-1 text-popover-foreground transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0',\n      className\n    )}\n    ref={ref}\n    {...props}\n  />\n));\nContextMenuSubContent.displayName = 'ContextMenuSubContent';\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.CheckboxItem>\n>(({ className, children, ...props }, ref) => (\n  <BaseContextMenu.CheckboxItem\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded py-1.5 pr-2 pl-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50',\n      className\n    )}\n    ref={ref}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <BaseContextMenu.CheckboxItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </BaseContextMenu.CheckboxItemIndicator>\n    </span>\n    {children}\n  </BaseContextMenu.CheckboxItem>\n));\nContextMenuCheckboxItem.displayName = 'ContextMenuCheckboxItem';\n\nconst ContextMenuRadioGroup = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.RadioGroup>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.RadioGroup>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.RadioGroup\n    className={cn('', className)}\n    ref={ref}\n    {...props}\n  />\n));\nContextMenuRadioGroup.displayName = 'ContextMenuRadioGroup';\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <BaseContextMenu.RadioItem\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded py-1.5 pr-2 pl-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50',\n      className\n    )}\n    ref={ref}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <BaseContextMenu.RadioItemIndicator>\n        <div className=\"h-2 w-2 rounded-full bg-current\" />\n      </BaseContextMenu.RadioItemIndicator>\n    </span>\n    {children}\n  </BaseContextMenu.RadioItem>\n));\nContextMenuRadioItem.displayName = 'ContextMenuRadioItem';\n\nconst ContextMenuGroup = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.Group>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.Group>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.Group className={cn('', className)} ref={ref} {...props} />\n));\nContextMenuGroup.displayName = 'ContextMenuGroup';\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ComponentRef<typeof BaseContextMenu.GroupLabel>,\n  React.ComponentPropsWithoutRef<typeof BaseContextMenu.GroupLabel>\n>(({ className, ...props }, ref) => (\n  <BaseContextMenu.GroupLabel\n    className={cn('px-2 py-1.5 font-semibold text-sm', className)}\n    ref={ref}\n    {...props}\n  />\n));\nContextMenuLabel.displayName = 'ContextMenuLabel';\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        'ml-auto text-muted-foreground text-xs tracking-widest',\n        className\n      )}\n      {...props}\n    />\n  );\n};\nContextMenuShortcut.displayName = 'ContextMenuShortcut';\n\nfunction ChevronRightIcon(props: React.ComponentProps<'svg'>) {\n  return (\n    <svg\n      fill=\"none\"\n      height=\"24\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <title>Expand submenu</title>\n      <path d=\"m9 18 6-6-6-6\" />\n    </svg>\n  );\n}\n\nfunction CheckIcon(props: React.ComponentProps<'svg'>) {\n  return (\n    <svg\n      fill=\"none\"\n      height=\"24\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <title>Check</title>\n      <polyline points=\"20,6 9,17 4,12\" />\n    </svg>\n  );\n}\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuPositioner,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuSeparator,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuShortcut,\n};\n",
      "type": "registry:ui"
    }
  ]
}