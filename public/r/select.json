{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:ui",
  "title": "Select",
  "author": "Preet Suthar <hi@preetsuthar.me>",
  "description": "Dropdown select inputs.",
  "dependencies": ["@base-ui-components/react"],
  "files": [
    {
      "path": "registry/select/select.tsx",
      "content": "'use client';\n\nimport { Select as BaseSelect } from '@base-ui-components/react/select';\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\nconst Select = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Root>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Root>\n>(function SelectComponent(props, _ref) {\n  return <BaseSelect.Root {...props} />;\n});\nSelect.displayName = 'Select';\n\nconst SelectTrigger = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Trigger>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Trigger>\n>(function SelectTriggerComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Trigger\n      className={cn(\n        'flex h-10 min-w-36 select-none items-center justify-between gap-3 rounded border border-border bg-background pr-3 pl-3.5 text-base text-foreground hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring data-[popup-open]:bg-accent',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectTrigger.displayName = 'SelectTrigger';\n\nconst SelectValue = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Value>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Value>\n>(function SelectValueComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Value className={cn('', className)} ref={ref} {...props} />\n  );\n});\nSelectValue.displayName = 'SelectValue';\n\nconst SelectIcon = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Icon>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Icon>\n>(function SelectIconComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Icon className={cn('flex', className)} ref={ref} {...props} />\n  );\n});\nSelectIcon.displayName = 'SelectIcon';\n\nconst SelectPortal = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Portal>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Portal>\n>(function SelectPortalComponent(props, _ref) {\n  return <BaseSelect.Portal {...props} />;\n});\nSelectPortal.displayName = 'SelectPortal';\n\nconst SelectBackdrop = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Backdrop>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Backdrop>\n>(function SelectBackdropComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Backdrop\n      className={cn(\n        'fixed inset-0 z-40 bg-black/30 transition-opacity data-[ending-style]:opacity-0 data-[starting-style]:opacity-0 dark:bg-black/60',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectBackdrop.displayName = 'SelectBackdrop';\n\nconst SelectPositioner = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Positioner>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Positioner>\n>(function SelectPositionerComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Positioner\n      className={cn('z-50 select-none outline-none', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectPositioner.displayName = 'SelectPositioner';\n\nconst SelectContent = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Popup>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Popup>\n>(function SelectContentComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Popup\n      className={cn(\n        'group max-h-[var(--available-height)] origin-[var(--transform-origin)] overflow-y-auto rounded bg-popover p-1 text-popover-foreground outline outline-border transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectContent.displayName = 'SelectContent';\n\nconst SelectArrow = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Arrow>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Arrow>\n>(function SelectArrowComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Arrow\n      className={cn(\n        'data-[side=right]:-rotate-90 flex data-[side=bottom]:top-[-8px] data-[side=left]:right-[-13px] data-[side=top]:bottom-[-8px] data-[side=right]:left-[-13px] data-[side=bottom]:rotate-0 data-[side=left]:rotate-90 data-[side=top]:rotate-180',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectArrow.displayName = 'SelectArrow';\n\nconst SelectItem = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Item>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Item>\n>(function SelectItemComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Item\n      className={cn(\n        'grid min-w-[var(--anchor-width)] cursor-default select-none grid-cols-[0.75rem_1fr] items-center gap-2 rounded py-2 pr-4 pl-2.5 text-sm leading-4 outline-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground group-data-[side=none]:min-w-[calc(var(--anchor-width)+1rem)] group-data-[side=none]:pr-12 group-data-[side=none]:text-base group-data-[side=none]:leading-4',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectItem.displayName = 'SelectItem';\n\nconst SelectItemText = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.ItemText>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.ItemText>\n>(function SelectItemTextComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.ItemText\n      className={cn('col-start-2', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectItemText.displayName = 'SelectItemText';\n\nconst SelectItemIndicator = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.ItemIndicator>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.ItemIndicator>\n>(function SelectItemIndicatorComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.ItemIndicator\n      className={cn('col-start-1', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectItemIndicator.displayName = 'SelectItemIndicator';\n\nconst SelectSeparator = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Separator>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Separator>\n>(function SelectSeparatorComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Separator\n      className={cn('mx-2 my-1 h-px bg-border', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectSeparator.displayName = 'SelectSeparator';\n\nconst SelectGroup = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.Group>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.Group>\n>(function SelectGroupComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.Group className={cn('', className)} ref={ref} {...props} />\n  );\n});\nSelectGroup.displayName = 'SelectGroup';\n\nconst SelectLabel = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.GroupLabel>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.GroupLabel>\n>(function SelectLabelComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.GroupLabel\n      className={cn('px-3 py-1 text-muted-foreground text-xs', className)}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectLabel.displayName = 'SelectLabel';\n\nconst SelectScrollUpArrow = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.ScrollUpArrow>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.ScrollUpArrow>\n>(function SelectScrollUpArrowComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.ScrollUpArrow\n      className={cn(\n        'top-0 z-[1] flex h-4 w-full cursor-default items-center justify-center rounded bg-popover text-center text-xs before:absolute before:left-0 before:h-full before:w-full before:content-[\"\"\"]',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectScrollUpArrow.displayName = 'SelectScrollUpArrow';\n\nconst SelectScrollDownArrow = React.forwardRef<\n  React.ComponentRef<typeof BaseSelect.ScrollDownArrow>,\n  React.ComponentPropsWithoutRef<typeof BaseSelect.ScrollDownArrow>\n>(function SelectScrollDownArrowComponent({ className, ...props }, ref) {\n  return (\n    <BaseSelect.ScrollDownArrow\n      className={cn(\n        'bottom-0 z-[1] flex h-4 w-full cursor-default items-center justify-center rounded bg-popover text-center text-xs before:absolute before:left-0 before:h-full before:w-full before:content-[\"\"\"]',\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nSelectScrollDownArrow.displayName = 'SelectScrollDownArrow';\n\nexport {\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectBackdrop,\n  SelectPositioner,\n  SelectContent,\n  SelectArrow,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectSeparator,\n  SelectGroup,\n  SelectLabel,\n  SelectScrollUpArrow,\n  SelectScrollDownArrow,\n};\n",
      "type": "registry:ui"
    }
  ]
}
